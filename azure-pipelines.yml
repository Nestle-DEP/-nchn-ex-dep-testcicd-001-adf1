# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- adf_publish
- releases/*

jobs:
- job: linux_azure
  pool:
    vmImage: ubuntu-latest
  steps:
  - task: PythonScript@0
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(rootPath)/change_link_one_git.py'
      arguments: $(rootPath) $(adfNameShort) st $(keyValut)
  - task: AzurePowerShell@5
    inputs:
      azureSubscription: 'DL-PR'
      ScriptType: 'FilePath'
      ScriptPath: './pre_post_script.ps1'
      ScriptArguments: -armTemplate '$(rootPath)/one/ARMTemplateForFactory.json'  -ResourceGroupName '$(resourceGroup)' -DataFactoryName '$(adfNameFull)' -predeployment $True
      azurePowerShellVersion: 'LatestVersion'
  - task: AzurePowerShell@5
    inputs:
      azureSubscription: 'DL-PR'
      ScriptType: 'FilePath'
      ScriptPath: './deploy.ps1'
      ScriptArguments: -ResourceGroupName '$(resourceGroup)' -TemplateFile '$(rootPath)/one/ARMTemplateForFactory.json' -TemplateParametersFile '$(rootPath)/one/ARMTemplateParametersForFactory.json'
      azurePowerShellVersion: 'LatestVersion'
  - task: AzurePowerShell@5
    inputs:
      azureSubscription: 'DL-PR'
      ScriptType: 'FilePath'
      ScriptPath: './pre_post_script.ps1'
      ScriptArguments: -armTemplate '$(rootPath)/one/ARMTemplateForFactory.json'  -ResourceGroupName '$(resourceGroup)' -DataFactoryName '$(adfNameFull)' -predeployment $False
      azurePowerShellVersion: 'LatestVersion'

#- job: linux_agent
 # pool: nestle-cn
 # steps:
 # - script: 
   #   chmod u+x azcopy
  #  displayName: 'enable execute'



#  - script:
  #    git clone -b hive_script $(gitRepo)
  #  displayName: 'git repo clone'



  #- script:
   #   chmod u+x git.sh
  #  displayName: 'enable git shell'

 # - script:
 #     ./git.sh
  #  displayName: 'git submit'


